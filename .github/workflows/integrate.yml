name: Integrate
on:
  pull_request:
    branches:
    - '**'
    - '!gh-pages'

  push:
    branches:
      - master
    tags:
      - '!v[0-9].*'
    
defaults:
  run:
    shell: bash
jobs:
  skip_check:
    name: Skip Run Check
    continue-on-error: true
    runs-on: ubuntu-22.04
    outputs:
      should_skip: ${{ steps.collate_checks.outputs.should_skip }}
    steps:
    - name: Check if PR Draft
      id: pr_draft_check
      if: github.event.pull_request.draft
      run: |
        echo "::set-output name=should_skip::true"
    - name: Check if PR Merge
      id: pr_merge_check
      if: |
        github.event.pull_request.merged == true &&
        github.event.pull_request.head.ref == 'main'
      run: |
        echo "::set-output name=should_skip::false"
    - name: Check if duplicate action
      id: push_check
      if: |
        steps.pr_draft_check.outcome == 'skipped' &&
        steps.pr_merge_check.outcome == 'skipped'
      uses: fkirc/skip-duplicate-actions@master
      with:
        skip_after_successful_duplicate: 'true'
        paths_ignore: '["**/README.md", ".idea/**", ".editorconfig", ".git*", "docs/**", ".github/**", "**/Doxyfile.in"]'
    - name: Collate Checks
      id: collate_checks
      if: |
        (steps.pr_draft_check.outcome == 'skipped' || steps.pr_draft_check.outputs.should_skip == 'true') &&
        (steps.pr_merge_check.outcome == 'skipped' || steps.pr_merge_check.outputs.should_skip != 'false') &&
        (steps.push_check.outcome == 'skipped' || steps.push_check.outputs.should_skip == 'true')
      run: |
        echo "::set-output name=should_skip::true"

  build-win:
    runs-on: windows-2022
    name: Build for Windows
    needs: skip_check
    if: needs.skip_check.outputs.should_skip != 'true'
    steps:
    - uses: actions/checkout@v3
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Add Path Msys64 Directory
      run: |
        echo "c:\msys64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: Install msys2 dependencies
      shell: msys2_shell.cmd -defterm -no-start -here -mingw64 {0}
      run: |
        pacman -S --noconfirm libxslt make gcc
    - name: Build Generic64
      shell: msys2_shell.cmd -defterm -no-start -here -mingw64 {0}
      run: |
        make generic64/libXKCP.so
      env:
        CFLAGS: -O3 -g0 -march=ivybridge -mtune=native
        ASMFLAGS: -march=ivybridge -mtune=native
    - name: Build SSSE3
      shell: msys2_shell.cmd -defterm -no-start -here -mingw64 {0}
      run: |
        make SSSE3/libXKCP.so
      env:
        CFLAGS: -O3 -g0 -march=corei7 -mtune=native
        ASMFLAGS: -march=corei7 -mtune=native
    - name: Build AVX2
      shell: msys2_shell.cmd -defterm -no-start -here -mingw64 {0}
      run: |
        make AVX2/libXKCP.so
      env:
        CFLAGS: -O3 -g0 -march=skylake -mtune=native
        ASMFLAGS: -march=skylake -mtune=native
    - name: Build AVX512
      shell: msys2_shell.cmd -defterm -no-start -here -mingw64 {0}
      run: |
        make AVX512/libXKCP.so
      env:
        CFLAGS: -O3 -g0 -march=skylake-avx512 -mtune=native
        ASMFLAGS: -march=skylake-avx512 -mtune=native

    - name: Rename artifacts
      run: |
          mkdir bin/artifacts
          mv bin/AVX2/libXKCP.so bin/artifacts/XKCP-AVX2.dll
          mv bin/AVX512/libXKCP.so bin/artifacts/XKCP-AVX512.dll
          mv bin/SSSE3/libXKCP.so bin/artifacts/XKCP-SSSE3.dll
          mv bin/generic64/libXKCP.so bin/artifacts/XKCP.dll
          mv bin/generic64/libXKCP.so.headers bin/artifacts/include
          ls bin/artifacts
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: XKCP-win
        path: |
          bin/artifacts/*.dll
          bin/artifacts/libXKCP-win.so.headers
          
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    needs: skip_check
    if: needs.skip_check.outputs.should_skip != 'true'
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install xsltproc -y

    - name: Build Generic64
      run: |
        CFLAGS="-O3 -g0 -march=ivybridge -mtune=native" ASMFLAGS="-march=ivybridge -mtune=native" make generic64/libXKCP.so

    - name: Build SSSE3
      run: |
        CFLAGS="-O3 -g0 -march=corei7 -mtune=native" ASMFLAGS="-march=corei7 -mtune=native" make SSSE3/libXKCP.so
    - name: Build AVX2
      run: |
        CFLAGS="-O3 -g0 -march=skylake -mtune=native" ASMFLAGS="-march=skylake -mtune=native" make AVX2/libXKCP.so
    - name: Build AVX512
      run: |
        CFLAGS="-O3 -g0 -march=skylake-avx512 -mtune=native" ASMFLAGS="-march=skylake-avx512 -mtune=native" make AVX512/libXKCP.so
    - name: Rename artifacts
      run: |
          mkdir bin/artifacts
          mv bin/AVX2/libXKCP.so bin/artifacts/libXKCP-AVX2.so
          mv bin/AVX512/libXKCP.so bin/artifacts/libXKCP-AVX512.so
          mv bin/SSSE3/libXKCP.so bin/artifacts/libXKCP-SSSE3.so
          mv bin/generic64/libXKCP.so bin/artifacts/libXKCP.so
          mv bin/generic64/libXKCP.so.headers bin/artifacts/include
          ls bin/artifacts
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: XKCP-linux
        path: |
          bin/artifacts/*.so
          bin/artifacts/include/libXKCP-linux.so.headers

  build-osx:
    name: Build for Mac OSX
    runs-on: macos-latest
    needs: skip_check
    if: needs.skip_check.outputs.should_skip != 'true'
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        brew install libxslt
    - name: Build Generic64
      run: |
        CFLAGS="-O3 -g0 -march=ivybridge -mtune=native" ASMFLAGS="-march=ivybridge -mtune=native" make generic64/libXKCP.so
    - name: Build SSSE3
      run: |
        CFLAGS="-O3 -g0 -march=corei7 -mtune=native" ASMFLAGS="-march=corei7 -mtune=native" make SSSE3/libXKCP.so
    - name: Build AVX2
      run: |
        CFLAGS="-O3 -g0 -march=skylake -mtune=native" ASMFLAGS="-march=skylake -mtune=native" make AVX2/libXKCP.so
    - name: Build AVX512
      run: |
        CFLAGS="-O3 -g0 -march=skylake-avx512 -mtune=native" ASMFLAGS="-march=skylake-avx512 -mtune=native" make AVX512/libXKCP.so
    - name: Rename artifacts
      run: |
          mkdir bin/artifacts
          mv bin/AVX2/libXKCP.so bin/artifacts/libXKCP-AVX2.dylib
          mv bin/AVX512/libXKCP.so bin/artifacts/libXKCP-AVX512.dylib
          mv bin/SSSE3/libXKCP.so bin/artifacts/libXKCP-SSSE3.dylib
          mv bin/generic64/libXKCP.so bin/artifacts/libXKCP.dylib
          mv bin/generic64/libXKCP.so.headers bin/artifacts/include
          ls bin/artifacts
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: XKCP-osx
        path: |
          bin/artifacts/*.dylib
          bin/artifacts/libXKCP-osx.so.headers
